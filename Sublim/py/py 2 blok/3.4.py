# -*- coding: UTF-8 -*-
import math
import pylab
import random
from matplotlib import mlab
# согласованная фильтрация сигнала сдвинутого во времени относительно начала
L=9 # длительность сигнала и сигнала в начале
N=75 # длительность входного процесса
s=[3,6,1,5,-8,2,-5,-3,5] # массив отсчетов сигнала
h=[]# массив для отсчетов импульсной характеристики
x=[] # входной процесс
y=[]# выходной процесс
# импульсная характеристика согласованного фильта
for i in range(0,L):
   h.append(s[L-1-i])
 # процесс формирования входного  воздействия 
for i in range(0,N):
    x.append(random.normalvariate(0,2))
    if i < L :
        x[i]=x[i]+ s[i]  # добавление сигнала без временного  сдвига
   # добавление сигнала с временным  сдвигом
    if ((i >= 30) and (i < (30+L) )):
        x[i]=x[i]+s[i-30]
for i in range(0,N):
    y.append(0)
    for k in range(0,L) :
        if (((i-k)>=0 ) ):
             y[i]=y[i]+x[i-k]*h[k]# процесс фильтрации
xmin = 0
xmax = N-1
xlist = mlab.frange (xmin, xmax, 1)
#Нарисуем график
pylab.plot (xlist,x,xlist,y)
#Покажем окно с нарисованным графиком
pylab.show()